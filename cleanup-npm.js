#!/usr/bin/env node

const { execSync } = require('child_process');

console.log('üßπ L√∂sche alle dev- und beta-Versionen von npm...');

// Versionen die behalten werden sollen
const keepVersions = ['1.1.0', '1.2.0', '1.2.1', '1.2.2', '2.0.0', '2.1.0', '2.1.1'];

// Alle Versionen abrufen
const versionsOutput = execSync('npm view homebridge-kostal-inverter versions --json', { encoding: 'utf8' });
const allVersions = JSON.parse(versionsOutput);

console.log(`üìä Gefunden: ${allVersions.length} Versionen`);

// Versionen zum L√∂schen identifizieren
const versionsToDelete = allVersions.filter(version => !keepVersions.includes(version));

console.log(`üóëÔ∏è  Zu l√∂schende Versionen: ${versionsToDelete.length}`);
console.log(`‚úÖ Behaltene Versionen: ${keepVersions.length}`);

// Versionen l√∂schen
let deletedCount = 0;
let errorCount = 0;

for (const version of versionsToDelete) {
  try {
    console.log(`üóëÔ∏è  L√∂sche Version ${version}...`);
    execSync(`npm unpublish homebridge-kostal-inverter@${version}`, { stdio: 'pipe' });
    deletedCount++;
    console.log(`‚úÖ Version ${version} gel√∂scht`);
  } catch (error) {
    errorCount++;
    console.log(`‚ùå Fehler beim L√∂schen von ${version}: ${error.message}`);
  }
}

console.log('\nüìä Zusammenfassung:');
console.log(`‚úÖ Erfolgreich gel√∂scht: ${deletedCount}`);
console.log(`‚ùå Fehler: ${errorCount}`);
console.log(`üì¶ Verbleibende Versionen: ${keepVersions.join(', ')}`);

if (errorCount > 0) {
  console.log('\n‚ö†Ô∏è  Einige Versionen konnten nicht gel√∂scht werden. M√∂gliche Gr√ºnde:');
  console.log('   - Version ist zu alt (npm erlaubt nur L√∂schung von Versionen < 72h)');
  console.log('   - Berechtigungsprobleme');
  console.log('   - Version existiert nicht mehr');
}
